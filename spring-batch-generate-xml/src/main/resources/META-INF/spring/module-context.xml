<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:batch="http://www.springframework.org/schema/batch"
	xsi:schemaLocation="
	http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.1.xsd
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<description>Example job to get you started. It provides a skeleton for
		a typical batch application.
	</description>

	<batch:job id="job1">
	<batch:step id="stepBorrarFicheros" next="stepPrepararCsv">
			<batch:tasklet ref="taskletBorrarFicheros" transaction-manager="transactionManager"
				start-limit="100">
			</batch:tasklet>
		</batch:step>
		<batch:step id="stepPrepararCsv" next="stepGeneraXmls">
			<batch:tasklet ref="taskletStep1" transaction-manager="transactionManager"
				start-limit="100">
			</batch:tasklet>
		</batch:step>
		<batch:step id="stepGeneraXmls" next="stepModificaNie">
			<batch:tasklet ref="taskletStep2" transaction-manager="transactionManager"
				start-limit="100">
			</batch:tasklet>
		</batch:step>
		<batch:step id="stepModificaNie" next="stepModificarCasos">
			<batch:tasklet transaction-manager="transactionManager"
				start-limit="100">
				<batch:chunk reader="readerModificarNie" writer="writerModificarNie"
					commit-interval="1" />
			</batch:tasklet>
		</batch:step>
		<batch:step id="stepModificarCasos">
			<batch:tasklet transaction-manager="transactionManager"
				start-limit="100">
				<batch:chunk reader="readerModificarCasos" writer="writerModificarCasos"
					commit-interval="1" />
			</batch:tasklet>
		</batch:step>
	</batch:job>


</beans>
